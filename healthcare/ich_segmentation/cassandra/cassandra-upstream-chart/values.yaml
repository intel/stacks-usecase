clusterName: "cassandra-healthcare-usecase-test-cluster"
#replica count specfies how many nodes will be used when deploying the cassandra cluster
replicaCount: 2

#If set to true a NodePort service will be deployed to expose the cluster externally
exposeClusterExternally: false

image:
  repository: registry.hub.docker.com/library
  tag: latest
  pullPolicy: IfNotPresent
  name: cassandra

#Resources to be used by each cassandra node
resources:
  enabled: false
  requests:
    memory: "5G"
    cpu: "1"
  limits:
    memory: "6G"
    cpu: "4"

#Variable used to control JVM_OPTS for the pods
jvmOpts: 
  enabled: true
  value: "-Dcassandra.consistent.rangemovement=false"

#If enablePersistence is set to false, the data and logs dir will be using no K8s persistent volumes
#therefore the data on the cluster does not persist across container deletion and recreation, this option
#is useful for testing purposes
enablePersistence: false
localStorageClass: "local-storage-class"
persistentVolumes:
  dataVolumeSize: 4G

#When set to true, the chart mounts the files stored in <helm-chart-dir>/files/conf as a read-only volume mounted in /etc/cassandra/ inside the pods.
#some example files for configuring authentication and internode encryption are provided.
#cassandra.yaml must be modified manually to use the provided conf files
provideCustomConfig: false

#If enabled tries to use keystore and truststore files located on <helm-chart-dir>/files/conf and decodes them in order to be used by the provided cassandra.yaml
#Since keystore and truststore need to be base64 encoded to be transmited to the kubernetes server, this variable instructs the pod to decode the files and 
#creates keystore-decoded and truststore-decoded, those files need to be referenced on the provided cassandra.yaml, this option requires provideCustomConfig enabled.
enableCommEncryption: false
